swagger: '2.0'

info:
  title: SE2 RESTPep API
  description: APIs per la gestione di esami composti da tasks.
  version: 1.0.0



host: se2-restpep-dev.herokuapp.com
basePath: /api

schemes:
  - https

consumes:
  - application/json
produces:
  - application/json

paths:
  /users:
    post:
      summary: Crea un utente
      parameters:
        - in: body
          name: user
          required: true
          schema:
            type: object
            required:
              - matricola
              - email
            properties:
              matricola:
                type: integer
                description: matricola dell'utente
                example: 12456
              email:
                type: string
                description: email dell'utente
                example: mario.rossi@unitn.it
      tags:
        - Users
      responses:
        201:
          description: Created. Utente creato e restituito
          schema:
            $ref: '#/definitions/User'
    get:
      summary: Ritorna lista di tutti gli utenti
      tags:
        - Users
      responses:
        200:
          description: OK. Lista users restituita
          schema:
            $ref: '#/definitions/UsersArray'
        500:
          description: Internal Server Error. Errore del server

  /users/{userId}:
    get:
      summary: Ritorna un utente in base all'ID
      #description: Specificato l'ID dell'utente viene ritornato l'oggetto associato all'utente contenente ID, matricola ed e-mail.
      parameters:
        - in: path
          name: userId #nome del parametro (anche se poi il nome non sarà visualizzato es: /users/3812)
          required: true
          type: integer
          minimum: 1
          description: Id dell'utente da ritornare
      tags:
        - Users
      responses:
        200:
          description: OK. Ritornato un oggetto User
          schema:
            $ref: '#/definitions/User'
        400:
          description: Bad Request. ID utente specificato invalido
        404:
          description: Not Found. Utente con ID specificato non trovato
    put:
      summary: Modifica un utente in base all'ID
      parameters:
        - in: path
          name: userId
          required: true
          type: integer
          minimum: 1
          description: ID dell'utente da modificare
        - in: body
          name: edituser
          required: true
          schema:
            type: object
            properties:
              matricola:
                type: integer
                description: nuova matricola
                example: 32562
              email:
                type: string
                description: nuova email
                example: luca.verdi@unitn.it
      tags:
        - Users
      responses:
        200:
          description: OK. L'utente con l'ID specificato è stata modificato
        400:
          description: Bad Request. ID task specificato invalido
        500:
          description: Internal Server Error. Errore del server

    delete:
      tags:
        - user
      summary: Cancella un utente partendo dall ID
      operationId: deleteuserID
      parameters:
        - name: userId
          in: path
          description: ID dell' utente desiderato
          required: true
          type: integer
      responses:
        204:
          description: User deleted
        404:
          description: User not found
  
  /groups:
    post:
      summary: Crea un gruppo
      parameters:
        - in: body
          name: group
          required: true
          schema:
            type: object
            required:
              - groupname
              - userlist
            properties:
              groupname:
                type: string
                description: nome del gruppo
                example: gruppo 10
              userlist:
                $ref: '#/definitions/UsersArray'
      tags:
        - Groups
      responses:
        200:
          description: OK. Gruppo creato e restituito
          schema:
            $ref: '#/definitions/Group'
    get:
      summary: Ritorna lista di tutti i gruppi
      tags:
        - Groups
      responses:
        200:
          description: OK. Lista gruppi restituita
          schema:
            $ref: '#/definitions/GroupsArray'
        500:
          description: Internal Server Error. Errore del server

  /groups/{groupId}:
    get:
      summary: Ritorna un gruppo in base all'ID
      parameters:
        - in: path
          name: groupId
          required: true
          type: integer
          minimum: 1
          description: ID del gruppo da ritornare
      tags:
        - Groups
      responses:
        200:
          description: OK. Ritornato un oggetto Group
          schema:
            $ref: '#/definitions/Group'
        400:
          description: Bad Request. ID gruppo specificato invalido
        404:
          description: Not Found. Gruppo con ID specificato non trovato
    put:
      summary: Modifica un gruppo in base all'ID
      parameters:
        - in: path
          name: groupId
          required: true
          type: integer
          minimum: 1
          description: ID del gruppo da modificare
        - in: body
          name: editgroup
          description: per modificare una risorsa del gruppo ho bisogno di una nuova lista di user
          required: true
          schema:
            $ref: '#/definitions/UsersArray'
      tags:
        - Groups
      responses:
        200:
          description: OK. Il gruppo con l'ID specificato è stato modificato
        400:
          description: Bad Request. ID gruppo specificato invalido
        500:
          description: Internal Server Error. Errore del server

    delete:
      summary: Cancella un gruppo partendo dall ID
      operationId: deletegroupID
      parameters:
        - name: groupId
          in: path
          description: ID dell' utente desiderato
          required: true
          type: integer
      responses:
        204:
          description: Group deleted
        404:
          description: Group not found
      tags:
        - Groups
  /tasks:
    post:
      summary: Crea una task
      parameters:
        - in: body
          name: user
          description: per creare una risorsa task ho bisogno del tipo di task, della consegna
          required: true
          schema:
            type: object
            required:
              - tipo
              - consegna
            properties:
              tipo:
                type: string
                description: tipo della task
                example: domanda aperta
              consegna:
                type: string
                description: consegna della task
                example: Immaginate a grandi linee una api REST per esse3. come sarebbe strutturata, ad alto livello?
              risoluzione:
                type: string
                description: soluzione della task
                example: Deve avere per esempio le risorse ...
      tags:
        - Tasks
      responses:
        201:
          description: Created. Task creata e restituita.
          schema:
            $ref: '#/definitions/Task'
    get:
      summary: Ritorna lista di tutte le tasks
      tags:
        - Tasks
      responses:
        200:
          description: OK. Lista tasks restituita
          schema:
            $ref: '#/definitions/TasksArray'
        500:
          description: Internal Server Error. Errore del server

  /tasks/{taskId}:
    get:
      summary: Ritorna una task in base all'ID
      #description: Specificato l'ID della task viene ritornato l'oggetto associato alla task.
      parameters:
        - in: path
          name: taskId
          required: true
          type: integer
          minimum: 1
          description: ID della task da ritornare
      tags:
        - Tasks
      responses:
        200:
          description: OK. Ritornato un oggetto Task
          schema:
            $ref: '#/definitions/Task'
        400:
          description: Bad Request. ID task specificato invalido
        404:
          description: Not Found. Task con ID specificato non trovata
    put:
      summary: Modifica una task in base all'ID
      parameters:
        - in: path
          name: taskId
          required: true
          type: integer
          minimum: 1
          description: ID della task da modificare
        - in: body
          name: edittask
          description: per modificare una risorsa task ho bisogno o del nuovo tipo o della nuova consegna
          required: true
          schema:
            type: object
            properties:
              tipo:
                type: string
                description: tipo della task
                example: domanda aperta
              consegna:
                type: string
                description: consegna della task
                example: nuova consegna della task....
              risoluzione:
                type: string
                description: soluzione della task
                example: nuova risoluzione della task...
      tags:
        - Tasks
      responses:
        200:
          description: OK. La task con l'ID specificato è stata modificata
        400:
          description: Bad Request. ID task specificato invalido
        500:
          description: Internal Server Error. Errore del server

    delete:
      summary: Cancella una task partendo dall ID
      operationId: deletetaskByID
      parameters:
        - name: taskId
          in: path
          description: ID dell' utente desiderato
          required: true
          type: integer
      responses:
        204:
          description: Task deleted
        404:
          description: Task not found
      tags:
        - Tasks
  /taskgroups:
    post:
      summary: Crea un gruppo di tasks
      parameters:
        - in: body
          name: taskgroup
          required: true
          schema:
            $ref: '#/definitions/TasksArray'
      tags:
        - TasksGroup
      responses:
        200:
          description: OK. Gruppo di task creato e restituito.
          schema:
            $ref: '#/definitions/TaskGroup'
    get:
      summary: Ritorna lista di tutti i gruppi di task
      tags:
        - TasksGroup
      responses:
        200:
          description: OK. Lista gruppi task restituita
          schema:
            $ref: '#/definitions/TasksArray'
        500:
          description: Internal Server Error. Errore del server

  /taskgroups/{taskgroupId}:
    get:
      summary: Ritorna un gruppo di task in base all'ID
      parameters:
        - in: path
          name: taskgroupId
          required: true
          type: integer
          minimum: 1
          description: ID del gruppo di task da ritornare
      tags:
        - TasksGroup
      responses:
        200:
          description: OK. Ritornato un oggetto TaskGroup
          schema:
            $ref: '#/definitions/TaskGroup'
        400:
          description: Bad Request. ID gruppo task specificato invalido
        404:
          description: Not Found. Gruppo di task con ID specificato non trovato
    put:
      summary: Modifica un gruppo di task in base all'ID
      parameters:
        - in: path
          name: taskgroupId
          required: true
          type: integer
          minimum: 1
          description: ID del gruppo di task da modificare
        - in: body
          name: edittaskgroup
          description: per modificare una risorsa taskgroup ho bisogno di una nuova lista di task
          required: true
          schema:
            type: object
            properties:
              tasks:
                $ref: '#/definitions/TasksArray'
      tags:
        - TasksGroup
      responses:
        200:
          description: OK. Il gruppo di task con l'ID specificato è stato modificato
        400:
          description: Bad Request. ID gruppo di task specificato invalido
        500:
          description: Internal Server Error. Errore del server

    delete:
      summary: Cancella un gruppo di task partendo dall ID
      operationId: deletetaskgroupByID
      parameters:
        - name: taskgroupId
          in: path
          description: ID dell' utente desiderato
          required: true
          type: integer
      responses:
        204:
          description: Task group deleted
        404:
          description: Task group not found

  /exams:
    post:
      summary: Crea un esame
      parameters:
        - in: body
          name: exam
          description: per creare una risorsa esame ho bisogno di una lista di tasks una deadline ed un destinatario
          required: true
          schema:
            type: object
            properties:
              destinatario:
                type: string
              deadline:
                type: string
              taskslist:
                $ref: '#/definitions/TasksArray'
      tags:
        - Exams
      responses:
        200:
          description: OK. Esame creato e restituito.
          schema:
            $ref: '#/definitions/Exam'
    get:
      summary: Ritorna lista di gli esami
      tags:
        - Exams
      responses:
        200:
          description: OK. Lista esami restituita
          schema:
            $ref: '#/definitions/ExamsArray'
        500:
          description: Internal Server Error. Errore del server

  /exams/{examId}:
    get:
      summary: Ritorna un esame in base all'ID
      parameters:
        - in: path
          name: examId
          required: true
          type: integer
          minimum: 1
          description: ID dell'esame da ritornare
      tags:
        - Exams
      responses:
        200:
          description: OK. Ritornato un oggetto Exam
          schema:
            $ref: '#/definitions/Exam'
        400:
          description: Bad Request. ID esame specificato invalido
        404:
          description: Not Found. Esame con ID specificato non trovato
    put:
      summary: Modifica un esame in base all'ID
      parameters:
        - in: path
          name: examId
          required: true
          type: integer
          minimum: 1
          description: ID dell'esame da modificare
        - in: body
          name: editexam
          description: per modificare un exam mi serve o un nuovo destinatario o una nuova deadline o una nuova lista di task
          required: true
          schema:
            type: object
            properties:
              destinatario:
                type: string
                description: id dell'utente destinatario
                example: 2345
              deadline:
                type: string
                description: deadline
              taskslist:
                $ref: '#/definitions/TasksArray'
      tags:
        - Exams
      responses:
        200:
          description: OK. Esame con ID specificato è stato modificato
        400:
          description: Bad Request. ID exams specificato invalido
        500:
          description: Internal Server Error. Errore del server

    delete:
      summary: Cancella un esame partendo dall ID
      operationId: deleteExamID
      parameters:
        - name: examId
          in: path
          description: ID dell' utente desiderato
          required: true
          type: integer
      responses:
        204:
          description: Class deleted
        404:
          description: Class not found
      tags:
        - Exams

  /deliveries:
    post:
      summary: Crea una delivery
      parameters:
        - in: body
          name: delivery
          description: per creare una risorsa delivery hai bisogno del tuo id, id delle task, e la soluzione della task
          required: true
          schema:
            type: object
            properties:
              tested-id:
                type: integer
                description: id della persona che ha svolto l'esame o la peer-review
                example: 112
              reviewed-id:
                type: integer
                description: id della persona revisionata (vuoto se non si è nella peer-review)
                example: 167
              task-array:
                type: array
                items:
                  type: object
                properties:
                  id:
                    type: integer
                    description: id della task
                  soluzione:
                    type: string
                    description: testo della soluzione o della review
                example:
                  - id: 12
                    soluzione: soluzione / review della task con id 12 ...
                  - id: 13
                    soluzione: soluzione / review della task con id 13 ...
      tags:
        - Deliveries
      responses:
        200:
          description: OK. Delivery creato.
    get:
      summary: Ritorna lista di deliveries
      tags:
        - Deliveries
      responses:
        200:
          description: OK. Lista delivery
          schema:
            $ref: '#/definitions/DeliveriesArray'
        500:
          description: Internal Server Error. Errore del server

  /deliveries/{deliveryId}:
    get:
      summary: Ritorna una delivery in base all'ID
      parameters:
        - in: path
          name: deliveryId
          required: true
          type: integer
          minimum: 1
          description: ID della delivery da ritornare
      tags:
        - Deliveries
      responses:
        200:
          description: OK. Ritornato un oggetto delivery
          schema:
            $ref: '#/definitions/Delivery'
        400:
          description: Bad Request. ID delivery specificato invalido
        404:
          description: Not Found. Delivery con ID specificato non trovato
    delete:
      summary: Cancella una delivery partendo dall ID
      operationId: deleteDeliveryID
      parameters:
        - name: deliveryId
          in: path
          description: ID della delivery desiderata
          required: true
          type: integer
      responses:
        204:
          description: Delivery deleted
        404:
          description: Delivery not found
      tags:
        - Deliveries
  /deliveries/{ExamId}:
    get:
      summary: Ritorna deliveries in base all'ID dell'esame
      parameters:
        - in: path
          name: ExamId
          required: true
          type: integer
          minimum: 1
          description: ID dell'esame di cui voglio le delivery da ritornare
      tags:
        - Deliveries
      responses:
        200:
          description: OK. Ritornato una lista di delivery
          schema:
            $ref: '#/definitions/DeliveriesArray'
        400:
          description: Bad Request. ID exam specificato invalido
        404:
          description: Not Found. Exam con ID specificato non trovato
    delete:
      summary: Cancella delle deliveries partendo dall ID dell'esame
      parameters:
        - name: ExamId
          in: path
          description: ID dell'esame di cui eliminare le delivery'
          required: true
          type: integer
      responses:
        204:
          description: Deliveries deleted
        404:
          description: Exam not found
      tags:
        - Deliveries
definitions:
  #definizione dell'oggetto user con campi id matricola ed email
  User:
    type: object
    description: User object
    properties:
      id:
        type: integer
        description: id dell'utente
        example: 93827
      mat:
        type: integer
        description: matricola dell'utente
        example: 13768
      email:
        type: string
        description: email dell'utente
        example: mario.rossi@unitn.it
    required:
      - id
      - mat
      - email

  UsersArray:
    type: array
    description: lista di utenti
    items:
      $ref: '#/definitions/User'
    example:
      - id: 93827
        mat: 13768
        email: mario.rossi@unitn.it
      - id: 94621
        mat: 13769
        email: paolo.verdi@unitn.it

  DeleteUserID:
    type: array
    description: lista di utenti
    items:
      $ref: '#/definitions/User'
    example:
      - id: 93827
        mat: 13768
        email: mario.rossi@unitn.it
      - id: 94621
        mat: 13769
        email: paolo.verdi@unitn.it

  Class:
    type: object
    description: Class object
    properties:
      id:
        type: integer
        description: id della classe
        example: 153
      nomeclasse:
        type: string
        description: nome della classe
        example: ingegneria del software 2
      membri:
        $ref: '#/definitions/UsersArray'
    required:
      - id

  Group:
    type: object
    description: Group object
    properties:
      id:
        type: integer
        description: id del gruppo
        example: 10
      nomegruppo:
        type: string
        description: nome del gruppo
        example: gruppo 10
      membri:
        $ref: '#/definitions/UsersArray'
    required:
      - id
    example:
      id: 10
      nomegruppo: gruppo 10
      membri:
        - id: 93827
          mat: 13768
          email: mario.rossi@unitn.it
        - id: 94621
          mat: 13769
          email: paolo.verdi@unitn.it

  GroupsArray:
    type: array
    description: lista di gruppi
    items:
      $ref: '#/definitions/Group'
    example:
      - id: 10
        nomegruppo: gruppo 10
        membri:
          - id: 93827
            mat: 13768
            email: mario.rossi@unitn.it
          - id: 94621
            mat: 13769
            email: paolo.verdi@unitn.it
      - id: 11
        nomegruppo: gruppo 11
        membri:
        - id: 13321
          mat: 13768
          email: paolo.rossi@unitn.it
        - id: 34434
          mat: 13445
          email: francesco.gialli@unitn.it

  Task:
    type: object
    description: Task object
    properties:
      id:
        type: integer
        description: id della task
        example: 15
      tipo:
        type: string
        description: tipo della task
        enum: [domanda aperta, crocette]
        example: domanda aperta
      consegna:
        type: string
        description: consegna della task
        example: Immaginate a grandi linee una api REST per esse3. come sarebbe strutturata, ad alto livello?
      risoluzione:
        type: string
        description: risoluzione della task
        example: Deve avere per esempio le risorse ...
    required:
      - id
      - tipo
      - consegna

  TasksArray:
    type: array
    description: lista di tasks
    items:
      $ref: '#/definitions/Task'
    example:
      - id: 15
        tipo: domanda aperta
        consegna: Immaginate a grandi linee una api REST per esse3. come sarebbe strutturata, ad alto livello?
        risoluzione: Deve avere per esempio le risorse ...
      - id: 16
        tipo: domanda aperta
        consegna: Cos'è il REST?
        risoluzione: Representational State Transfer è un tipo di architettura software per i sistemi distribuiti.

  TaskGroup:
    type: object
    description: TaskGroup object
    properties:
      id:
        type: integer
        description: id del taskgroup
        example: 4312
      tasks:
        $ref: '#/definitions/TasksArray'


  Exam:
    type: object
    description: Exam object
    properties:
      id:
        type: integer
        description: id dell'esame
      tasks:
        $ref: '#/definitions/TasksArray'
        description: lista di task presenti nell'esame
      deadline:
        type: string
        format: date-time
        description: deadline dopo al quale l'esame si conclude
        example: 2018-12-25T09:00:00Z #(25 dic 2018, 9:00 UTC)
      destinatario:
        type: integer
        description: id della matricola che riceverà l'esame
        example: 93827
      autore:
        type: string
        description: professore che ha creato l'esame
        example: prof. paolo gialli

  ExamsArray:
    type: array
    description: lista di esami
    items:
      $ref: '#/definitions/Exam'
    example:
      - id: 382
        tasks:
          - id: 15
            tipo: domanda aperta
            consegna: Immaginate a grandi linee una api REST per esse3. come sarebbe strutturata, ad alto livello?
            risoluzione: Deve avere per esempio le risorse ...
          - id: 16
            tipo: domanda aperta
            consegna: Cos'è il REST?
            risoluzione: Representational State Transfer è un tipo di architettura software per i sistemi distribuiti.
        deadline: 2018-12-25T09:00:00Z
        destinatario: 93827
        autore: prof. paolo gialli
      - id: 101
        tasks:
          - id: 15
            tipo: domanda aperta
            consegna: Immaginate a grandi linee una api REST per esse3. come sarebbe strutturata, ad alto livello?
            risoluzione: Deve avere per esempio le risorse ...
          - id: 16
            tipo: domanda aperta
            consegna: Cos'è il REST?
            risoluzione: Representational State Transfer è un tipo di architettura software per i sistemi distribuiti.
        deadline: 2018-11-30T08:30:00Z
        destinatario: 12131
        autore: prof. marco verdi

  Delivery:
    type: object
    description: Delivery object; oggetto tramite cui gli utenti mandano le loro risposte alle task / peer-review
    properties:
      id:
        type: integer
        description: id della delivery
        example: 46152
      tested-id:
        type: integer
        description: id della persona che ha svolto la task
        example: 93827
      reviewed-id:
        type: integer
        description: id della persona di cui si sta svolgendo la peer-review
        example: 93217
      task-array:
        type: array
        description: array di oggetti id-task, soluzione
        items:
          type: object
          properties:
            id:
              type: integer
              description: id della task
            soluzione:
              type: string
              description: soluzione della task
        example:
          - id: 37162
            soluzione: soluzione della task con id 37162...
          - id: 37165
            soluzione: soluzione della task con id 37165...


  DeliveriesArray:
    type: array
    description: lista di deliveries
    items:
      $ref: '#/definitions/Delivery'
